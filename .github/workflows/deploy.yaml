name: Deploy Django Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: bo-stage
  GKE_CLUSTER: be-demo
  GKE_ZONE: asia-south1
  DEPLOYMENT_NAME: backend-application

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}

    - name: Configure GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    - name: Set up Helm
      uses: azure/setup-helm@v1
      with:
        version: '3.8.0'

    - name: Set environment-specific variables
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "ENVIRONMENT=production" >> $GITHUB_ENV
        else
          echo "ENVIRONMENT=staging" >> $GITHUB_ENV
        fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Google Container Registry
      uses: docker/login-action@v1
      with:
        registry: asia-south1-docker.pkg.dev
        username: _json_key
        password: ${{ secrets.GCP_SA_KEY }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: asia-south1-docker.pkg.dev/betteropinions-test/bo-main/2024-11-01.1:${{ github.sha }}

    - name: Scan Docker image
      uses: anchore/scan-action@v3
      with:
        image: "asia-south1-docker.pkg.dev/betteropinions-test/bo-main/2024-11-01.1:${{ github.sha }}"
        fail-build: true
        severity-cutoff: high

    - name: Create Static IP 
      run: |
        gcloud compute addresses create gke-ingress-static-ip --global || true

    - name: Generate SSL Certificate
      run: |
        mkdir -p ssl
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
          -keyout ssl/tls.key -out ssl/tls.crt \
          -subj "/CN=api-v2.integration-betteropinions.com"

    - name: Create TLS Secret
      run: |
        kubectl create secret tls gke-openssl-cert \
          --cert=ssl/tls.crt \
          --key=ssl/tls.key \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Create ConfigMap
      run: |
        kubectl create configmap better-backend-app-config \
          --from-file=path/to/your/config/file.env \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Update Helm dependencies
      run: |
        helm dependency update ./django-app

    - name: Lint Helm chart
      run: helm lint ./django-app

    - name: Backup critical data
      run: |
        # Add your backup command here
        echo "Backing up critical data..."

    - name: Deploy Django Application
      run: |
        helm upgrade --install ${{ env.DEPLOYMENT_NAME }} ./django-app \
          --set django.image.repository=asia-south1-docker.pkg.dev/betteropinions-test/bo-main/2024-11-01.1 \
          --set django.image.tag=${{ github.sha }} \
          --set django.host=api-v2.integration-betteropinions.com \
          --set configMap.name=better-backend-app-config \
          --set global.environment=${{ env.ENVIRONMENT }} \
          --atomic

    - name: Check deployment status
      run: |
        if ! kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}; then
          echo "Deployment failed. Rolling back..."
          helm rollback ${{ env.DEPLOYMENT_NAME }}
          exit 1
        fi

    - name: Run Helm tests
      run: helm test ${{ env.DEPLOYMENT_NAME }} --logs

    - name: Wait for Ingress
      run: |
        kubectl wait --for=condition=Ready ingress/${{ env.DEPLOYMENT_NAME }} --timeout=300s

    - name: Update DNS
      run: |
        INGRESS_IP=$(kubectl get ingress ${{ env.DEPLOYMENT_NAME }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        # Add your DNS update command here
        echo "Updating DNS with IP: $INGRESS_IP"

    - name: Run load tests
      run: |
        # Add your load testing command here
        echo "Running load tests..."

    - name: Verify deployment
      run: |
        kubectl get pods
        kubectl get services
        kubectl get ingress

    - name: Cleanup old releases
      run: |
        helm list --short | tail -n +6 | xargs -I {} helm delete {} --no-hooks

    - name: Archive Helm artifacts
      uses: actions/upload-artifact@v3
      with:
        name: helm-chart
        path: ./django-app
